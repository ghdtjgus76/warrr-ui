name: VRT 스냅샷 업데이트
on:
  workflow_run:
    workflows: [Storybook 빌드 및 아티팩트 생성]
    types: [completed]

jobs:
  update-snapshots:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: 체크 런 생성
        id: create-check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const { data: checkRun } = await github.checks.create({
              name: 'VRT 스냅샷 업데이트',
              head_sha: '${{ github.event.workflow_run.head_sha }}',
              status: 'in_progress',
              owner: context.repo.owner,
              repo: context.repo.repo,
              output: {
                title: 'VRT 스냅샷 업데이트',
                summary: 'VRT 스냅샷 업데이트가 시작되었습니다.'
              }
            });
            console.log(`체크 런이 생성되었습니다. ID: ${checkRun.id}`);
            return checkRun.id;

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v2
        with:
          version: 8.15.6

      - name: 캐시 pnpm 의존성
        id: cache-pnpm
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 캐시 Playwright 브라우저
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: 의존성 설치
        run: |
          if [ ! -d "node_modules" ] || [ ! -d "~/.pnpm-store" ]; then
            echo "저장된 캐시가 없거나 캐시가 손상되었습니다. 의존성을 설치합니다."
            pnpm install --frozen-lockfile
          else
            echo "캐시가 저장되어 있어, 설치 과정을 생략합니다."
          fi

      - name: Playwright 설치
        run: |
          if [ ! -d "~/.cache/ms-playwright" ]; then
            echo "저장된 캐시가 없습니다. playwright를 설치합니다."
            pnpm exec playwright install --with-deps
          else
            echo "캐시가 저장되어 있어, 설치 과정을 생략합니다."
          fi

      - name: 스토리북 아티팩트 다운로드
        uses: dawidd6/action-download-artifact@v6
        with:
          name: storybook-build
          path: packages/primitive/storybook-static

      - name: 스토리북 실행
        run: |
          npx serve -l 6006 packages/primitive/storybook-static &
          echo $! > .storybook-pid

      - name: 스냅샷 업데이트
        run: pnpm run e2e:update

      - name: 스토리북 프로세스 종료
        if: always()
        run: kill $(cat .storybook-pid)

      - name: 변경된 스냅샷 커밋 및 푸시
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .playwright
          git diff --staged --quiet || git commit -m "Update VRT snapshots in .playwright folder"
          git push origin HEAD:${{ github.head_ref }}

      - name: 체크 런 업데이트 (성공)
        if: ${{ success() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            await github.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ steps.create-check.outputs.check_run_id }},
              status: 'completed',
              conclusion: 'success',
              output: {
                title: 'VRT 스냅샷 업데이트',
                summary: 'VRT 스냅샷 업데이트가 성공적으로 완료되었습니다.'
              }
            });

      - name: 체크 런 업데이트 (실패)
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            await github.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ steps.create-check.outputs.check_run_id }},
              status: 'completed',
              conclusion: 'failure',
              output: {
                title: 'VRT 스냅샷 업데이트',
                summary: 'VRT 스냅샷 업데이트가 실패했습니다. 자세한 내용은 첨부된 테스트 결과와 diff 이미지를 확인해주세요.'
              }
            });

      - name: PR 코멘트 작성
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## VRT 스냅샷 업데이트 완료\n\n스냅샷이 성공적으로 업데이트되었습니다. 변경된 스냅샷이 이 PR에 포함되었습니다. 리뷰해주세요.'
            })

      - name: VRT 레이블 제거
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.TOKEN}}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'VRT'
            })
